// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id() @default(autoincrement())
  name       String
  username   String
  password   String
  role       Role         @default(USER)
  status     String       @default("used")
  Assignment Assignment[]
  Store      Store[]
}

enum Role {
  USER
  ADMIN
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  cost          Int
  qty           Int             @default(0)
  createDate    DateTime        @default(now())
  categoryId    Int
  Category      Category        @relation(fields: [categoryId], references: [id])
  ProductDetail ProductDetail[]
  SparePart     SparePart[]
}

model Category {
  id      Int       @id @default(autoincrement())
  name    String
  Product Product[]
}

model ProductDetail {
  id           Int          @id @default(autoincrement())
  serialNumber String
  status       String       @default("used")
  productId    Int
  Product      Product      @relation(fields: [productId], references: [id])
  Assignment   Assignment[]
}

model SparePart {
  id            Int             @id @default(autoincrement())
  name          String
  cost          Int
  qty           Int             @default(0)
  status        String          @default("used")
  createDate    DateTime        @default(now())
  productId     Int
  Product       Product         @relation(fields: [productId], references: [id])
  UsedSparePart UsedSparePart[]
}

model SparePartDetail{
  id Int @id @default(autoincrement())
  
}

model UsedSparePart {
  id           Int        @id @default(autoincrement())
  sparePartId  Int
  qty          Int
  assignmentId Int
  Assignment   Assignment @relation(fields: [assignmentId], references: [id])
  SparePart    SparePart  @relation(fields: [sparePartId], references: [id])
}

model Customer {
  id         Int          @id @default(autoincrement())
  name       String
  code       String
  address    String
  email      String
  contact1   String
  contact2   String?
  status     String       @default("used")
  Assignment Assignment[]
}

model Assignment {
  id              Int             @id @default(autoincrement())
  title           String
  detail          String
  createDate      DateTime        @default(now())
  customerId      Int
  userId          Int
  productDetailId Int
  Customer        Customer        @relation(fields: [customerId], references: [id])
  User            User            @relation(fields: [userId], references: [id])
  ProductDetail   ProductDetail   @relation(fields: [productDetailId], references: [id])
  status          String          @default("created")
  UsedSparePart   UsedSparePart[]
}

model Store {
  id     Int  @id @default(autoincrement())
  userId Int
  User   User @relation(fields: [userId], references: [id])
}
